#!/bin/sh

logged_in=

id=
password=

is_insecure()
{
    # Check if a file is accessible to other users
    [ -n $(find $1 -perm /066) ]
}

# TODO - Test this
make_secure()
{
    chmod -066 $1
}

# get saved login info from ~/.netrc
parse_netrc()
{
	netrc='~/.netrc'
	[ -e $netrc ] || return 1

	if is_insecure $netrc
	then
		echo 'Warning: .netrc has insecure permissions.' >&2

        read -p 'Do you want to fix it? [Y/n] ' fix

        case $fix in
            [yY][eE][sS]|[yY])
                make_secure $netrc
                ;;
            *) ;;
        esac
	fi

    # TODO - figure out what this is doing and modify as needed
    #cred=$(sed -n "/machine my.rochester.edu/,/machine /p" $netrc)
    #user_id=$(sed -n 's/.*login \([^ ]*\).*/\1/p' <<< $cred)
    #password=$(sed -n 's/.*password \([^ ]*\).*/\1/p' <<< $cred)
}

has_valid_session()
{
    [ $logged_in ] || return 0

    # TODO - implement this
    if :
	then
        logged_in=:
		return 0
    fi

    logged_in=
    password=

    return 1
}

Login()
{
    parse_netrc

	if [ -z $id ]
	then
		read -p 'Net ID: ' id
	fi

	if [ -z $password ]
	then
		stty -echo
		read -p 'Password: ' password; echo
		stty echo
	fi

    if ! command -v ruby &> /dev/null
    then
        echo 'Error: unable to run Ruby.' >&2
        return 1
    fi

    if ! ruby login.rb $id $password
    then
        echo 'Error: unable to log in.' >&2
        logged_in=

        return 1
    fi

    logged_in=:

    return 0
}

is_valid_crn()
{
    [ ${#1} = 5 ] && echo "$1" | grep -q '[0-9]\{5\}' -
}
